Many users today have tens to hundreds of accounts with web services that store sensitive data, from social media to tax preparation and e-commerce sites . While users have the right to delete their data (via the GDPR  or CCPA ), users want and deserve more nuanced controls over their data that don’t exist today. For example, a user might wish to hide and protect data of an e-commerce or dating app profile when inactive, but also want their data to be present should they return to use the application. Today, however, services often provide only coarse-grained, blunt tools that result in all-or-nothing exposure of users’ private information.

This thesis introduces the notion of disguised data, a reversible state of data in which sensitive data is selectively hidden. To demonstrate the feasibility of disguised data, this thesis also presents —the first system for disguised data—which helps database-backed web applications allow users to remove their data without permanently losing their accounts, anonymize their old data, and selectively dissociate personal data from public profiles. helps developers support these features while maintaining application functionality and referential integrity via disguising and revealing transformations. Disguising selectively renders user data inaccessible via encryption, and revealing enables the user to restore their data to the application. ’s techniques allow transformations to compose in any order, deleting a previously anonymized user’s account, or restoring an account back to an anonymized state. With , web applications can enable flexible privacy features with reasonable developer effort (<1k LoC for a 160k real web application) and moderate performance impact on application operation throughput (2–6% in the common case, varying with load). Thus, this thesis suggests that privacy features beyond what applications offer today are indeed practical, and can and should be widely supported.
